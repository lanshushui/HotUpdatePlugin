// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext.kotlin_version = "1.4.21"
    repositories {
        google()
        jcenter()
    }
    dependencies {
        classpath "com.android.tools.build:gradle:4.0.0"
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"

        // NOTE: Do not place your application dependencies here; they belong
        // in the individual module build.gradle files
    }
}

allprojects {
    repositories {
        google()
        jcenter()
    }
}
//自定义的Task
task updateDex(group: 'plugin') {
    // 这个task执行会在assembleDebug之后执行
    dependsOn ':app:assembleDebug'
    doLast {
        //创建build目录
        def soPathParent = getRootDir().absolutePath + "\\build"
        def soPathParentFile = new File(soPathParent)
        if (!soPathParentFile.exists()) {
            soPathParentFile.mkdirs()
        }
        //复制并重命名apk
        def defaultAPKPath = getRootDir().absolutePath + "\\app\\build\\outputs\\apk\\debug\\app-debug.apk"
        println(defaultAPKPath)
        def f = new File(defaultAPKPath)
        if (f.exists()) {
            copy {
                from defaultAPKPath
                into soPathParent
                rename("app-debug.apk", "patch.so")
            }
        }
        //推送so包到Andorid目录
        def fromPath = soPathParent + "\\patch.so"
        def PDASDCardPath = "/sdcard/Android/data/com.zzz.hotupdatehost/files/plugin/patch.so"
        def adbPushSo = 'adb push ' + fromPath + ' ' + PDASDCardPath
        Process adbPushSoProcess = adbPushSo.execute()
        adbPushSoProcess.in.eachLine { processing ->
            println processing
        }
        //关闭App
        def adbKillApp= 'adb shell am force-stop  com.zzz.hotupdatehost'
        Process adbKillAppProcess = adbKillApp.execute()
        adbKillAppProcess.in.eachLine { processing ->
            println processing
        }
        //启动App
        def adbStartApp= 'adb shell am start -n com.zzz.hotupdatehost/com.zzz.hotupdatehost.MainActivity'
        Process adbStartAppProcess = adbStartApp.execute()
        adbStartAppProcess.in.eachLine { processing ->
            println processing
        }
    }
}
task clean(type: Delete) {
    delete rootProject.buildDir
}